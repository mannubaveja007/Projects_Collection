{"ast":null,"code":"var _jsxFileName = \"D:\\\\intern\\\\calendar\\\\calendar-app-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport EventForm from './components/EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n\n  // Function to handle saving a new or edited event\n  const handleSaveEvent = eventData => {\n    if (selectedEvent) {\n      // Edit the event\n      setEvents(events.map(event => event.id === selectedEvent.id ? {\n        ...event,\n        ...eventData\n      } : event));\n    } else {\n      // Add new event\n      setEvents([...events, {\n        ...eventData,\n        id: new Date().toISOString()\n      }]);\n    }\n    setSelectedEvent(null); // Reset selection after saving\n  };\n\n  // Handle selecting an event to edit\n  const handleEditEvent = event => {\n    setSelectedEvent(event);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Event Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventForm, {\n      event: selectedEvent,\n      onSave: handleSaveEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [event.title, \" (\", event.date, \" at \", event.time, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditEvent(event),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ysp6aq0fKYIgi9scWHpcRXGSqIA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","EventForm","jsxDEV","_jsxDEV","App","_s","events","setEvents","selectedEvent","setSelectedEvent","handleSaveEvent","eventData","map","event","id","Date","toISOString","handleEditEvent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSave","title","date","time","onClick","_c","$RefreshReg$"],"sources":["D:/intern/calendar/calendar-app-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport EventForm from './components/EventForm';\n\nconst App = () => {\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n\n  // Function to handle saving a new or edited event\n  const handleSaveEvent = (eventData) => {\n    if (selectedEvent) {\n      // Edit the event\n      setEvents(events.map(event => event.id === selectedEvent.id ? { ...event, ...eventData } : event));\n    } else {\n      // Add new event\n      setEvents([...events, { ...eventData, id: new Date().toISOString() }]);\n    }\n    setSelectedEvent(null); // Reset selection after saving\n  };\n\n  // Handle selecting an event to edit\n  const handleEditEvent = (event) => {\n    setSelectedEvent(event);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Event Calendar</h1>\n      <EventForm event={selectedEvent} onSave={handleSaveEvent} />\n      <h2>Events</h2>\n      <ul>\n        {events.map(event => (\n          <li key={event.id}>\n            {event.title} ({event.date} at {event.time})\n            <button onClick={() => handleEditEvent(event)}>Edit</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA,MAAMU,eAAe,GAAIC,SAAS,IAAK;IACrC,IAAIH,aAAa,EAAE;MACjB;MACAD,SAAS,CAACD,MAAM,CAACM,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKN,aAAa,CAACM,EAAE,GAAG;QAAE,GAAGD,KAAK;QAAE,GAAGF;MAAU,CAAC,GAAGE,KAAK,CAAC,CAAC;IACpG,CAAC,MAAM;MACL;MACAN,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE;QAAE,GAAGK,SAAS;QAAEG,EAAE,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MAAE,CAAC,CAAC,CAAC;IACxE;IACAP,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMQ,eAAe,GAAIJ,KAAK,IAAK;IACjCJ,gBAAgB,CAACI,KAAK,CAAC;EACzB,CAAC;EAED,oBACEV,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhB,OAAA;MAAAgB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBpB,OAAA,CAACF,SAAS;MAACY,KAAK,EAAEL,aAAc;MAACgB,MAAM,EAAEd;IAAgB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5DpB,OAAA;MAAAgB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfpB,OAAA;MAAAgB,QAAA,EACGb,MAAM,CAACM,GAAG,CAACC,KAAK,iBACfV,OAAA;QAAAgB,QAAA,GACGN,KAAK,CAACY,KAAK,EAAC,IAAE,EAACZ,KAAK,CAACa,IAAI,EAAC,MAAI,EAACb,KAAK,CAACc,IAAI,EAAC,GAC3C,eAAAxB,OAAA;UAAQyB,OAAO,EAAEA,CAAA,KAAMX,eAAe,CAACJ,KAAK,CAAE;UAAAM,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFrDV,KAAK,CAACC,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClB,EAAA,CApCID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAsCT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}