{"ast":null,"code":"var _jsxFileName = \"D:\\\\intern\\\\calendar\\\\calendar-app-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar'; // Import the calendar library\nimport 'react-calendar/dist/Calendar.css'; // Import default styling for the calendar\nimport EventForm from 'components/EventForm'; // Your event form component to create events\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CalendarUI = ({\n  events,\n  onEventSave\n}) => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [showEventForm, setShowEventForm] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n\n  // Handle calendar date change\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    setSelectedEvent(null); // Clear the selected event when the date changes\n    setShowEventForm(true); // Show the event form when a date is selected\n  };\n\n  // Show events for the selected date\n  const getEventsForSelectedDate = date => {\n    return events.filter(event => new Date(event.date).toDateString() === new Date(date).toDateString());\n  };\n\n  // Handle saving an event\n  const handleSaveEvent = eventData => {\n    onEventSave(eventData);\n    setShowEventForm(false); // Close the form after saving\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-ui\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Event Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: handleDateChange // Update selected date\n      ,\n      value: selectedDate // Set the selected date on the calendar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-list\",\n      children: selectedDate && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Events for \", selectedDate.toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: getEventsForSelectedDate(selectedDate).map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: event.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: event.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this), event.media && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [event.media.type === 'image' && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: event.media.url,\n                alt: event.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 56\n              }, this), event.media.type === 'video' && /*#__PURE__*/_jsxDEV(\"video\", {\n                controls: true,\n                src: event.media.url\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 56\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this)]\n          }, event.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), showEventForm && /*#__PURE__*/_jsxDEV(EventForm, {\n      event: selectedEvent,\n      onSave: handleSaveEvent // Handle form submission\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarUI, \"Sh4zq0yhhkhRWLygSBKuLzewf4U=\");\n_c = CalendarUI;\nexport default CalendarUI;\nvar _c;\n$RefreshReg$(_c, \"CalendarUI\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","EventForm","jsxDEV","_jsxDEV","Fragment","_Fragment","CalendarUI","events","onEventSave","_s","selectedDate","setSelectedDate","showEventForm","setShowEventForm","selectedEvent","setSelectedEvent","handleDateChange","date","getEventsForSelectedDate","filter","event","Date","toDateString","handleSaveEvent","eventData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","map","title","description","time","media","type","src","url","alt","controls","id","onSave","_c","$RefreshReg$"],"sources":["D:/intern/calendar/calendar-app-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar'; // Import the calendar library\nimport 'react-calendar/dist/Calendar.css'; // Import default styling for the calendar\nimport EventForm from 'components/EventForm'; // Your event form component to create events\n\nconst CalendarUI = ({ events, onEventSave }) => {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [showEventForm, setShowEventForm] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n\n  // Handle calendar date change\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    setSelectedEvent(null); // Clear the selected event when the date changes\n    setShowEventForm(true); // Show the event form when a date is selected\n  };\n\n  // Show events for the selected date\n  const getEventsForSelectedDate = (date) => {\n    return events.filter(event => new Date(event.date).toDateString() === new Date(date).toDateString());\n  };\n\n  // Handle saving an event\n  const handleSaveEvent = (eventData) => {\n    onEventSave(eventData);\n    setShowEventForm(false); // Close the form after saving\n  };\n\n  return (\n    <div className=\"calendar-ui\">\n      <h2>Event Calendar</h2>\n      <Calendar\n        onChange={handleDateChange} // Update selected date\n        value={selectedDate} // Set the selected date on the calendar\n      />\n      <div className=\"event-list\">\n        {selectedDate && (\n          <>\n            <h3>Events for {selectedDate.toDateString()}</h3>\n            <ul>\n              {getEventsForSelectedDate(selectedDate).map(event => (\n                <li key={event.id}>\n                  <strong>{event.title}</strong>\n                  <p>{event.description}</p>\n                  <p>{event.time}</p>\n                  {event.media && (\n                    <div>\n                      {event.media.type === 'image' && <img src={event.media.url} alt={event.title} />}\n                      {event.media.type === 'video' && <video controls src={event.media.url} />}\n                    </div>\n                  )}\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n\n      {showEventForm && (\n        <EventForm\n          event={selectedEvent}\n          onSave={handleSaveEvent} // Handle form submission\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CalendarUI;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}