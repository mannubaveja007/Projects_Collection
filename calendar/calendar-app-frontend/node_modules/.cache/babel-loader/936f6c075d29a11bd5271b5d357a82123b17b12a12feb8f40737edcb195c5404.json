{"ast":null,"code":"var _jsxFileName = \"D:\\\\intern\\\\calendar\\\\calendar-app-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CalendarUI from './components/calendarUI';\nimport { requestNotificationPermission, checkAndShowNotifications } from './notificationUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [events, setEvents] = useState([{\n    id: '1',\n    title: 'Meeting',\n    date: '2024-11-10',\n    time: '10:00 AM',\n    description: 'Team meeting'\n  }, {\n    id: '2',\n    title: 'Conference',\n    date: '2024-11-11',\n    time: '2:00 PM',\n    description: 'Tech conference'\n  }]);\n  useEffect(() => {\n    requestNotificationPermission();\n  }, []);\n  // Function to handle saving a new or edited event\n  const handleSaveEvent = eventData => {\n    setEvents([...events, eventData]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Event Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarUI, {\n      events: events,\n      onEventSave: handleSaveEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Iqq3kF5/KmJKSUhCdQrpjGC15nc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CalendarUI","requestNotificationPermission","checkAndShowNotifications","jsxDEV","_jsxDEV","App","_s","events","setEvents","id","title","date","time","description","useEffect","handleSaveEvent","eventData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onEventSave","_c","$RefreshReg$"],"sources":["D:/intern/calendar/calendar-app-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport CalendarUI from './components/calendarUI';\nimport { requestNotificationPermission, checkAndShowNotifications } from './notificationUtils';\n\nconst App = () => {\n  const [events, setEvents] = useState([\n    { id: '1', title: 'Meeting', date: '2024-11-10', time: '10:00 AM', description: 'Team meeting' },\n    { id: '2', title: 'Conference', date: '2024-11-11', time: '2:00 PM', description: 'Tech conference' }\n  ]);\n  useEffect(() => {\n    requestNotificationPermission();\n  }, []);\n  // Function to handle saving a new or edited event\n  const handleSaveEvent = (eventData) => {\n    setEvents([...events, eventData]);\n  };\n  \n\n  return (\n    <div className=\"App\">\n      <h1>Event Calendar</h1>\n      <CalendarUI events={events} onEventSave={handleSaveEvent} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,6BAA6B,EAAEC,yBAAyB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/F,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CACnC;IAAEU,EAAE,EAAE,GAAG;IAAEC,KAAK,EAAE,SAAS;IAAEC,IAAI,EAAE,YAAY;IAAEC,IAAI,EAAE,UAAU;IAAEC,WAAW,EAAE;EAAe,CAAC,EAChG;IAAEJ,EAAE,EAAE,GAAG;IAAEC,KAAK,EAAE,YAAY;IAAEC,IAAI,EAAE,YAAY;IAAEC,IAAI,EAAE,SAAS;IAAEC,WAAW,EAAE;EAAkB,CAAC,CACtG,CAAC;EACFC,SAAS,CAAC,MAAM;IACdb,6BAA6B,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EACN;EACA,MAAMc,eAAe,GAAIC,SAAS,IAAK;IACrCR,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAES,SAAS,CAAC,CAAC;EACnC,CAAC;EAGD,oBACEZ,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAAc,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBlB,OAAA,CAACJ,UAAU;MAACO,MAAM,EAAEA,MAAO;MAACgB,WAAW,EAAER;IAAgB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV,CAAC;AAAChB,EAAA,CApBID,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAsBT,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}